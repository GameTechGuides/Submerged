name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Setup environment variables
        run: |
          echo "DOTNET_CLI_TELEMETRY_OPTOUT=1" >> $GITHUB_ENV
          echo "DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1" >> $GITHUB_ENV
      - name: Restore dependencies
        run: dotnet restore
      - name: Build Debug
        run: |
          dotnet build --configuration Debug --no-restore || exit 0
          echo "Debug build succeeded" >> build.log
      - name: Build Release
        run: |
          dotnet build --configuration Release --no-restore || exit 0
          echo "Release build succeeded" >> build.log
      - name: Check for untracked files
        run: |
          if [ -s build.log ]; then
            echo "Build completed with potential warnings."
          else
            echo "Build failed due to errors."
            exit 1
          fi
      - name: Upload Debug Artifact
        uses: actions/upload-artifact@v2
        with:
          name: submerged-debug
          path: Submerged/bin/Debug/net6.0/Submerged.dll
      - name: Upload Release Artifact
        uses: actions/upload-artifact@v2
        with:
          name: submerged-release
          path: Submerged/bin/Release/net6.0/Submerged.dll
      - name: Setup Draft Release
        if: github.ref == 'refs/heads/main'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.run_number }}
          draft: true
          prerelease: false
      - name: Upload Debug Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Submerged/bin/Debug/net6.0/Submerged.dll
          asset_name: submerged-debug.dll
          asset_content_type: application/octet-stream
      - name: Upload Release Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./Submerged/bin/Release/net6.0/Submerged.dll
          asset_name: submerged-release.dll
          asset_content_type: application/octet-stream
